-- ================================================================
-- PARLE RETAIL ANALYTICS - CONSOLIDATED SQL QUERIES
-- ================================================================
-- This file contains all SQL queries used for the Parle Retail Analytics project
-- Last Updated: June 6, 2025
-- ================================================================

-- ----------------------------------------------------------------
-- SECTION 1: CUSTOMER INSIGHTS
-- ----------------------------------------------------------------

-- 1.1: Customer Spending Analysis
-- Analyzes customer spending patterns with order count and total spend
-- Visualization: Images/Spent_analyser.png
SELECT m.customer_id, COUNT(m.order_id) AS total_orders, 
       SUM(n.quantity * n.list_price * (1 - n.discount)) AS total_spent
FROM orders m
JOIN order_items n ON m.order_id = n.order_id
GROUP BY m.customer_id
HAVING total_orders > 5 AND total_spent > 500;

-- 1.2: Average Products Per Customer
-- Calculates the average number of products purchased per customer
-- Visualization: Images/AverageOrder_perCust.png
SELECT m.customer_id, AVG(n.quantity) AS avg_products_per_order
FROM orders m
JOIN order_items n ON m.order_id = n.order_id
GROUP BY m.customer_id;

-- 1.3: Orders Per Customer
-- Counts the total number of orders for each customer
-- Visualization: Images/order_per_custmoer.png
SELECT customer_id, COUNT(*) AS total_orders
FROM orders
GROUP BY customer_id
ORDER BY total_orders DESC;

-- 1.4: Revenue Per Customer
-- Calculates total revenue generated by each customer
-- Visualization: Images/revenue_per_cust.png
SELECT m.customer_id, SUM(n.quantity * n.list_price * (1 - n.discount)) AS total_revenue
FROM orders m
JOIN order_items n ON m.order_id = n.order_id
GROUP BY m.customer_id
ORDER BY total_revenue DESC;

-- ----------------------------------------------------------------
-- SECTION 2: STORE PERFORMANCE
-- ----------------------------------------------------------------

-- 2.1: Average Order Value Per Store
-- Calculates the average order value for each store
-- Visualization: Images/avgorder_perStore.png
SELECT m.store_id, AVG(n.quantity * n.list_price * (1 - n.discount)) AS avg_order_value
FROM orders m
JOIN order_items n ON m.order_id = n.order_id
GROUP BY m.store_id;

-- 2.2: Total Items Sold Per Store
-- Counts the total number of items sold at each store
SELECT m.store_id, SUM(n.quantity) AS items_sold
FROM orders m
JOIN order_items n ON m.order_id = n.order_id
GROUP BY m.store_id;

-- 2.3: Total Sales and Discounts Per Store
-- Calculates total sales and total discount amounts for each store
-- Visualization: Images/ToatalSales_totalDiscount.png
SELECT m.store_id,
       SUM(n.quantity * n.list_price * (1 - n.discount)) AS total_sales,
       SUM(n.quantity * n.list_price * n.discount) AS total_discount
FROM orders m
JOIN order_items n ON m.order_id = n.order_id
GROUP BY m.store_id;

-- ----------------------------------------------------------------
-- SECTION 3: STAFF METRICS
-- ----------------------------------------------------------------

-- 3.1: Revenue Per Staff
-- Calculates total revenue generated by each staff member
-- Visualization: Images/Revenue_per_staff.png
SELECT m.staff_id, SUM(n.quantity * n.list_price * (1 - n.discount)) AS revenue_generated
FROM orders m
JOIN order_items n ON m.order_id = n.order_id
GROUP BY m.staff_id
ORDER BY revenue_generated DESC;

-- 3.2: Staff Order Handling
-- Identifies staff who handled the most orders
SELECT staff_id, COUNT(*) AS total_orders_handled
FROM orders
GROUP BY staff_id
ORDER BY total_orders_handled DESC
LIMIT 1;

-- 3.3: Top 5 Staff by Customer Count
-- Lists the top 5 staff members who served the most unique customers
-- Visualization: Images/Top_staff_order.png
SELECT staff_id, COUNT(DISTINCT customer_id) AS customers_served
FROM orders
GROUP BY staff_id
ORDER BY customers_served DESC
LIMIT 5;

-- 3.4: Unique Customers Per Staff
-- Counts the number of unique customers served by each staff member
-- Visualization: Images/Unique_Cust_per_staff.png
SELECT staff_id, COUNT(DISTINCT customer_id) AS unique_customers
FROM orders
GROUP BY staff_id;

-- ----------------------------------------------------------------
-- SECTION 4: ORDER ANALYSIS
-- ----------------------------------------------------------------

-- 4.1: Highest Value Order
-- Identifies the order with the highest total value
-- Visualization: Images/Higest_customer_order.png
SELECT m.order_id, m.customer_id, SUM(n.quantity * n.list_price * (1 - n.discount)) AS order_total
FROM orders m
JOIN order_items n ON m.order_id = n.order_id
GROUP BY m.order_id, m.customer_id
ORDER BY order_total DESC
LIMIT 1;

-- 4.2: Highest Order Count Month
-- Identifies the month with the highest number of orders
-- Visualization: Images/HigersMonth_Order.png
SELECT DATE_FORMAT(order_date, '%Y-%m') AS month, COUNT(*) AS order_count
FROM orders
GROUP BY month
ORDER BY order_count DESC
LIMIT 1;

-- ----------------------------------------------------------------
-- SECTION 5: PRODUCT ANALYSIS
-- ----------------------------------------------------------------

-- 5.1: Products with Highest Average Discount
-- Identifies the top 5 products with the highest average discount rates
-- Visualization: Images/avg_discount.png
SELECT product_id, AVG(discount) AS avg_discount
FROM order_items
GROUP BY product_id
ORDER BY avg_discount DESC
LIMIT 5;

-- 5.2: Total Quantity Sold Per Product
-- Calculates the total quantity sold for each product
SELECT product_id, SUM(quantity) AS total_quantity_sold
FROM order_items
GROUP BY product_id
ORDER BY total_quantity_sold DESC;

-- ================================================================
-- END OF FILE
-- ================================================================
